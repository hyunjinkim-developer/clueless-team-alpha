"""
Django settings for clueless project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-n2p=z$%=_2l4&_w&tm9%^a$d(f+^sdxebwdrkj0d5y5!^o9e=_'

# Enable debug mode for development
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Define allowed hosts (empty for local development)
ALLOWED_HOSTS = []

# Required Django applications for session management and WebSocket support
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',  # Session management
    'django.contrib.messages',
    'daphne',  # ASGI server for WebSocket
    'django.contrib.staticfiles',
    'channels',  # WebSocket framework
    'game',  # Custom game application
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',  # Handles session creation and management
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'clueless.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# WSGI and ASGI application settings
WSGI_APPLICATION = 'clueless.wsgi.application'
ASGI_APPLICATION = 'clueless.asgi.application'

# Configure Redis as the channel layer backend for WebSocket communication (requires Redis server running)
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            'hosts': [('127.0.0.1', 6379)],
        },
    },
}

# Session Management
# # Note: If session issues persist, clear django_session table and browser cookies.
# python manage.py dbshell
# sqlite> DELETE FROM django_session;
SESSION_COOKIE_NAME = 'sessionid'
SESSION_COOKIE_HTTPONLY = True  # Prevent JavaScript access to session cookies for security
SESSION_COOKIE_SAMESITE = 'Strict'  # Enforce strict same-site policy to prevent cookie sharing across browser windows
SESSION_COOKIE_AGE = 1800  # Set session duration to 30 minutes to limit stale cookie usage
SESSION_COOKIE_PATH = '/'  # Ensure cookies are scoped to the root path for consistent behavior
# For Development
SESSION_COOKIE_SECURE = False  # Disable secure flag for local development
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # How session data is saved on the server: Use database-backend sessions to ensure session isloation and persistence
# # For production
# SESSION_COOKIE_SECURE = True  # Set to True in production with HTTPS
# SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db' # With Redis for performance


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# SQLite database configuration for session storage
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),  # Include the static directory for images
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
